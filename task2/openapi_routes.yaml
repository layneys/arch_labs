openapi: 3.0.2
info:
  title: Route Service
  description: Сервис управления маршрутами
  version: 1.0.0
paths:
  /routes/:
    get:
      tags:
        - routes
      summary: Get Routes
      operationId: get_routes_routes__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Routes Routes  Get
                type: array
                items:
                  $ref: '#/components/schemas/Route'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - routes
      summary: Create Route
      operationId: create_route_routes__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /routes/user/{user_id}:
    get:
      tags:
        - routes
      summary: Get User Routes
      operationId: get_user_routes_routes_user__user_id__get
      parameters:
        - required: true
          schema:
            title: User Id
            type: integer
          name: user_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get User Routes Routes User  User Id  Get
                type: array
                items:
                  $ref: '#/components/schemas/Route'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /routes/{route_id}:
    get:
      tags:
        - routes
      summary: Get Route
      operationId: get_route_routes__route_id__get
      parameters:
        - required: true
          schema:
            title: Route Id
            type: integer
          name: route_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - routes
      summary: Delete Route
      operationId: delete_route_routes__route_id__delete
      parameters:
        - required: true
          schema:
            title: Route Id
            type: integer
          name: route_id
          in: path
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    patch:
      tags:
        - routes
      summary: Update Route
      operationId: update_route_routes__route_id__patch
      parameters:
        - required: true
          schema:
            title: Route Id
            type: integer
          name: route_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
components:
  schemas:
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Route:
      title: Route
      required:
        - user_id
        - start_point
        - end_point
        - distance
        - id
        - created_at
        - updated_at
      type: object
      properties:
        user_id:
          title: User Id
          type: integer
        start_point:
          title: Start Point
          minLength: 1
          type: string
        end_point:
          title: End Point
          minLength: 1
          type: string
        waypoints:
          title: Waypoints
          type: array
          items:
            type: string
          default: []
        distance:
          title: Distance
          exclusiveMinimum: 0
          type: number
        description:
          title: Description
          type: string
        id:
          title: Id
          type: integer
        created_at:
          title: Created At
          type: string
          format: date-time
        updated_at:
          title: Updated At
          type: string
          format: date-time
    RouteCreate:
      title: RouteCreate
      required:
        - user_id
        - start_point
        - end_point
        - distance
      type: object
      properties:
        user_id:
          title: User Id
          type: integer
        start_point:
          title: Start Point
          minLength: 1
          type: string
        end_point:
          title: End Point
          minLength: 1
          type: string
        waypoints:
          title: Waypoints
          type: array
          items:
            type: string
          default: []
        distance:
          title: Distance
          exclusiveMinimum: 0
          type: number
        description:
          title: Description
          type: string
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: http://127.0.0.1:8001/token
